# Variables provided by the repository
# DOCKER_USER
# DOCKER_PASSWORD
variables:
  DOCKER_REGISTRY: "registry.gitlab.com"
  DOCKER_REGISTRY_REPOSITORY_ID: "990440"
  DOCKER_ORGANISATION: "systemkern"
  IMAGE_NAME: "gitlab-ce-dbaccess"

stages:
  - build
  - teardown

before_script:
  - export TAG="${CI_COMMIT_REF_SLUG}"
  - if [ $TAG == "master" ]; then TAG="latest";  fi          # follow docker naming conventions
  - export IMAGE_PATH="$DOCKER_REGISTRY/$DOCKER_ORGANISATION/$CI_PROJECT_NAME:$TAG"
  - echo "creating docker image ${IMAGE_NAME} for user ${DOCKER_USER}"
  - docker login ${DOCKER_REGISTRY} -u "${DOCKER_USER}" -p "${DOCKER_PASSWORD}"
  - echo "IMAGE_PATH=$IMAGE_PATH"


build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker login ${DOCKER_REGISTRY} -u "${DOCKER_USER}" -p "${DOCKER_PASSWORD}"
    - docker build --quiet --tag "$IMAGE_PATH" .
    - docker push "${IMAGE_PATH}"
  environment:
    name: $COMMIT_REF_SLUG
    url: $CI_PROJECT_URL/container_registry#$CI_COMMIT_REF_SLUG
    on_stop: decomission


decomission:
  when: manual
  image: registry.gitlab.com/systemkern/s5:latest
  stage: teardown
  variables:
    GIT_STRATEGY: none
    WORKAROUND: "PRIVATE-TOKEN:" # workaround to not break the yaml structure
  script:
    - curl --request DELETE --header "$WORKAROUND $GITLAB_API_TOKEN"
      https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/registry/repositories/$DOCKER_REGISTRY_REPOSITORY_ID/tags/$TAG
  environment:
    name: $COMMIT_REF_SLUG
    action: stop
  except:
    refs:
      - master