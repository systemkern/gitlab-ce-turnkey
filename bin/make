#!/bin/bash
#
#
#
# Fail on any error
set -e

# Parse flags
while [ -n "$1" ]; do
  case "$1" in
  -r | --run)
    RUN="true"
  ;;
  *) echo "Option $1 not recognized" ;;
  esac
  shift
done

if [ "$CI_REGISTRY_IMAGE" = "" ]; then
  shopt -s extglob    # enable +(...) glob syntax
  result=${PWD%%+(/)} # trim however many trailing slashes exist
  CI_REGISTRY_IMAGE=${result##*/}
  echo "Missing CI_REGISTRY_IMAGE. Using '$CI_REGISTRY_IMAGE'"
fi

### Substituting for Gilab's CI environment variables
if [ "$CI_COMMIT_REF_SLUG" = "" ]; then
  CI_COMMIT_REF_SLUG="nightly"
  echo "Missing CI_COMMIT_REF_SLUG. Using Default value is '$CI_COMMIT_REF_SLUG'"
fi

export TAG="${CI_COMMIT_REF_SLUG}"
if [ $TAG = "master" ]; then
  TAG="latest";
fi

export IMAGE_PATH="$CI_REGISTRY_IMAGE:$TAG"
echo "Fully qualified docker image name is '$IMAGE_PATH'"

docker build -f Dockerfile-latest --tag "$IMAGE_PATH" .

if [ "$RUN" = "true" ]; then
  ### Set host level configs
  GITLAB_FILEMAX=1000000
  [[ $(cat /proc/sys/fs/file-max) -lt ${GITLAB_FILEMAX} ]] && echo $GITLAB_FILEMAX > /proc/sys/fs/file-max

  ### Create docker-network if already not there
  docker network inspect docker-network >/dev/null 2>&1 || \
  docker network create -d bridge docker-network
  
  echo "Starting container. Gitlab will be available at http://localhost:81"
  docker run --rm --name gitlab-aio                     \
    --hostname gitlab.localhost \
    --net docker-network \
    --publish 127.0.0.1:81:80                                     \
    --volume /var/run/docker.sock:/var/run/docker.sock  \
    --volume /srv/gitlab/config:/etc/gitlab \
    --volume /srv/gitlab/logs:/var/log/gitlab \
    --volume /srv/gitlab/data:/var/opt/gitlab \
    "$IMAGE_PATH"
fi
